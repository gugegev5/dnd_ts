{"version":3,"sources":["components/ItemTypes.ts","store/Items.ts","store/Compositions.ts","store/ItemKey.ts","store/index.ts","utils/Interact.ts","components/Background.tsx","layout/LeftAttr.tsx","layout/RightDisplay.tsx","layout/Layout.tsx","serviceWorker.ts","index.tsx"],"names":["ItemTypes","defaultItemKeys","ItemsActionNames","colors","initialState","itemType","Background","itemKey","styles","position","backgroundColor","width","height","backgroundImage","backgroundSize","backgroundRepeat","generateItem","parseInt","CompositionsActionNames","storeNewKey","ItemsReducers","state","action","type","INSERT","newKey","itemStyle","sourceItemType","console","log","UPDATE","mid","sourceItemKey","DELETE","fromJS","Default","childrens","searchByItemKey","get","res","searchRecursByItemKey","keyPath","i","size","keyPathMid","item","push","undefined","CompositionsReducers","targetItemKey","itemTodo","Map","updateIn","concat","List","length","removeIn","newItemKey","ItemKeyReducers","rootReducer","combineReducers","Items","Compositions","ItemKey","store","createStore","ItemsInitial","CompositionsInitial","ItemKeyInitial","devToolsEnhancer","dropColorHandler","monitor","initial","isOver","shallow","canDrop","isActive","bgColor","border","defaultStyles","dragType","accept","compositionActionName","children","dispatch","useDispatch","useSelector","itemProps","left","right","useDrag","end","didDrop","collect","opacity","isDragging","drag","useDrop","drop","delta","getDifferenceFromInitialOffset","Math","round","x","top","y","dropStyles","ref","node","style","data-itemKey","UpdateBoard","display","flexDirection","alignItems","flex","textAlignLast","value","onChange","e","target","defaultValue","Option","LeftAttr","className","margin","textAlign","RenderCompositions","compositions","React","createElement","Fragment","renderRecursion","map","composition","RightDisplay","a","b","is","Content","Layout","PageLayout","padding","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","debugMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ccc2706a.chunk.js","sourcesContent":["import { CompositionsActionNames } from \"../store/Compositions\";\n\nexport enum ItemTypes {\n  Default = \"Default\",\n  Background = \"Background\",\n}\n\nexport enum defaultItemKeys {\n  Default = \"0\",\n}\n\nexport interface CommonDragItemI {\n  type: ItemTypes;\n  itemKey: string;\n  compositionActionName: CompositionsActionNames;\n}\n\nexport interface CommonDragCollectedPropsI {\n  opacity: number;\n}\n","import { ItemTypes } from \"../components/ItemTypes\";\nimport { Action } from \"redux\";\n\nexport enum ItemsActionNames {\n  INSERT = \"INSERT\",\n  UPDATE = \"UPDATE\",\n  DELETE = \"DELETE\",\n}\n\nexport interface ItemsActionTypesI extends Action<ItemsActionNames> {\n  sourceItemType: ItemTypes;\n  sourceItemKey: string;\n  styles: React.CSSProperties;\n}\n\nexport interface SingleItemStateI {\n  itemType: ItemTypes;\n  itemKey: string;\n  styles: React.CSSProperties;\n}\n\nexport interface ItemsStateI {\n  [index: string]: SingleItemStateI;\n}\n\nconst colors = [\n  \"#ff0000\",\n  \"#00ff00\",\n  \"#0000ff\",\n  \"#ffff00\",\n  \"#ff00ff\",\n  \"#00ffff\",\n];\n\nconst position: \"static\" = \"static\";\nexport const initialState: ItemsStateI = {\n  \"1000\": {\n    itemType: ItemTypes.Background,\n    itemKey: \"1\",\n    styles: {\n      position,\n      backgroundColor: \"#ffffff\",\n      width: \"100%\",\n      height: \"200px\",\n      backgroundImage:\n        \"url('https://shark.qietv.douyucdn.cn/static/07141652/component/live/player/1.0/res/common/goddess/title-s.png')\",\n      backgroundSize: \"contain\",\n      backgroundRepeat: \"no-repeat\",\n    },\n  },\n};\n\nfunction generateItem(itemType: ItemTypes, itemKey: string) {\n  return {\n    itemType,\n    itemKey,\n    styles: {\n      position,\n      backgroundColor: colors[parseInt(itemKey, 10) % 6],\n      width: \"100%\",\n      height: \"200px\",\n      backgroundImage:\n        \"url('https://shark.qietv.douyucdn.cn/static/07141652/component/live/player/1.0/res/common/goddess/title-s.png')\",\n      backgroundSize: \"contain\",\n      backgroundRepeat: \"no-repeat\",\n    },\n  };\n}\nlet storeNewKey = 1001;\nconst ItemsReducers = (\n  state: ItemsStateI = initialState,\n  action: ItemsActionTypesI\n) => {\n  switch (action.type) {\n    case ItemsActionNames.INSERT:\n      return (function () {\n        const newKey = `${storeNewKey++}`;\n        const itemStyle = generateItem(action.sourceItemType, newKey);\n        console.log(\"item style insert\", itemStyle);\n        return { ...state, [newKey]: itemStyle };\n      })();\n    case ItemsActionNames.UPDATE:\n      const mid = state[action.sourceItemKey];\n      state[action.sourceItemKey].styles = { ...mid.styles, ...action.styles };\n      console.log(\"item style update\", action, state);\n      return state;\n    case ItemsActionNames.DELETE:\n      return { ...state };\n    default:\n      return state;\n  }\n};\n\nexport default ItemsReducers;\n","import { ItemTypes } from \"../components/ItemTypes\";\nimport { Action } from \"redux\";\nimport { List, fromJS, Map } from \"immutable\";\nimport { defaultItemKeys } from \"../components/ItemTypes\";\n\nexport enum CompositionsActionNames {\n  INSERT = \"INSERT\",\n  UPDATE = \"UPDATE\",\n  DELETE = \"DELETE\",\n}\n\ntype CompositionItemObj = {\n  itemType: ItemTypes;\n  itemKey: string;\n  // styles: React.CSSProperties;\n  childrens: List<CompositionItemStateI>;\n};\n\nexport interface CompositionItemStateI\n  extends Map<keyof CompositionItemObj, any> {\n  get: <K extends keyof CompositionItemObj>(key: K) => CompositionItemObj[K];\n  updateIn(\n    keyPath: Iterable<string>,\n    updater: (value: List<CompositionItemStateI>) => any\n  ): this;\n}\n\ninterface CompositionsActionTypesCommonI\n  extends Action<CompositionsActionNames> {\n  targetItemKey: string;\n  sourceItemType: ItemTypes;\n}\n\nexport type CompositionsActionTypesI =\n  | (CompositionsActionTypesCommonI & {\n      type: CompositionsActionNames.DELETE | CompositionsActionNames.UPDATE;\n    })\n  | {\n      type: CompositionsActionNames.INSERT;\n      sourceItemKey: string;\n      targetItemKey: string;\n      sourceItemType: ItemTypes;\n    };\n\nexport interface CompositionStateI {\n  itemType: ItemTypes;\n  itemKey: string;\n  styles: { [index: string]: string };\n}\n\nexport interface CompositionStatesI {\n  [index: string]: CompositionStateI;\n}\n\nexport const initialState: CompositionItemStateI = fromJS({\n  itemType: ItemTypes.Default,\n  itemKey: defaultItemKeys.Default,\n  childrens: [\n    // {\n    //   itemType: ItemTypes.Background,\n    //   itemKey: \"1\",\n    //   childrens: [],\n    // },\n    // {\n    //   itemType: ItemTypes.Background,\n    //   itemKey: \"2\",\n    //   childrens: [],\n    // },\n  ],\n});\n\nfunction searchByItemKey(\n  state: CompositionItemStateI,\n  itemKey: string\n): [string[] | undefined, CompositionItemStateI] {\n  if (state.get(\"itemKey\") !== itemKey) {\n    const res = searchRecursByItemKey(state.get(\"childrens\"), itemKey, [\n      \"childrens\",\n    ]);\n    if (res) {\n      return res;\n    } else {\n      return [undefined, state];\n    }\n  }\n  return [[], state];\n}\n\nfunction searchRecursByItemKey(\n  childrens: List<CompositionItemStateI>,\n  itemKey: string,\n  keyPath: string[]\n): [string[], CompositionItemStateI] | undefined {\n  for (let i = 0; i < childrens.size; i++) {\n    const keyPathMid = [...keyPath, `${i}`];\n    const item = childrens.get(i);\n    if (item!.get(\"itemKey\") === itemKey) {\n      // keyPathMid.push(\"childrens\");\n      return [keyPathMid, item!];\n    } else {\n      keyPathMid.push(\"childrens\");\n      const res = searchRecursByItemKey(\n        item!.get(\"childrens\"),\n        itemKey,\n        keyPathMid\n      );\n      if (res) {\n        return res;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nconst CompositionsReducers = function (\n  state: CompositionItemStateI = initialState,\n  action: CompositionsActionTypesI\n): CompositionItemStateI {\n  if (action.type === CompositionsActionNames.INSERT) {\n    const [keyPath] = searchByItemKey(state, action.targetItemKey);\n    if (keyPath) {\n      const itemTodo = Map({\n        itemType: action.sourceItemType,\n        itemKey: action.sourceItemKey,\n        childrens: [],\n      });\n      return state.updateIn(keyPath.concat(\"childrens\"), (childrens) => {\n        return childrens.size\n          ? childrens.push(itemTodo as CompositionItemStateI)\n          : List([itemTodo]);\n      });\n    }\n  } else if (action.type === CompositionsActionNames.DELETE) {\n    const [keyPath] = searchByItemKey(state, action.targetItemKey);\n\n    return keyPath && keyPath.length ? state.removeIn(keyPath) : state;\n  }\n  return state;\n};\nexport default CompositionsReducers;\n","import { Action } from \"redux\";\nimport { CompositionsActionNames } from \"./Compositions\";\n\nexport interface ItemKeyActionTypesI extends Action<CompositionsActionNames> {}\n\nexport interface ItemKeyStateI {\n  newItemKey: string;\n}\n\nexport const initialState: ItemKeyStateI = {\n  newItemKey: \"1000\",\n};\n\nconst ItemKeyReducers = (\n  state: ItemKeyStateI = initialState,\n  action: ItemKeyActionTypesI\n): ItemKeyStateI => {\n  if (action.type === CompositionsActionNames.INSERT) {\n    return { newItemKey: `${parseInt(state.newItemKey, 10) + 1}` };\n  }\n  return state;\n};\n\nexport default ItemKeyReducers;\n","import { createStore, combineReducers, CombinedState } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport ItemsReducers, {\n  ItemsStateI,\n  initialState as ItemsInitial,\n} from \"./Items\";\nimport CompositionsReducers, {\n  CompositionItemStateI,\n  initialState as CompositionsInitial,\n} from \"./Compositions\";\nimport ItemKeyReducers, {\n  ItemKeyStateI,\n  initialState as ItemKeyInitial,\n} from \"./ItemKey\";\n\nexport interface RootStateI {\n  Items: ItemsStateI;\n  Compositions: CompositionItemStateI;\n  ItemKey: ItemKeyStateI;\n}\n\nconst rootReducer = combineReducers<RootStateI>({\n  Items: ItemsReducers,\n  Compositions: CompositionsReducers,\n  ItemKey: ItemKeyReducers,\n});\n\nconst store = createStore<CombinedState<RootStateI>, any, any, any>(\n  rootReducer,\n  {\n    Items: ItemsInitial,\n    Compositions: CompositionsInitial,\n    ItemKey: ItemKeyInitial,\n  },\n  /* preloadedState, */ devToolsEnhancer({})\n);\n\nexport default store;\n","import { DropTargetMonitor } from \"react-dnd/lib/interfaces/monitors\";\n\nconst dropColor = \"darkgreen\";\nconst canDropColor = \"darkkhaki\";\n\nexport function dropColorHandler(monitor: DropTargetMonitor, initial?: any) {\n  const isOver = monitor.isOver({ shallow: true }),\n    canDrop = monitor.canDrop();\n  const isActive = isOver && canDrop;\n  let bgColor = initial?.backgroundColor;\n  if (isActive) {\n    bgColor = dropColor;\n    const border = \"red 2px dotted\";\n    return { backgroundColor: bgColor, border };\n  } else if (canDrop) {\n    bgColor = bgColor ? `${bgColor}88` : canDropColor;\n    return { backgroundColor: bgColor };\n  }\n  return {};\n}\n","import React, { Dispatch } from \"react\";\nimport { Input, Select } from \"antd\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport {\n  ItemTypes,\n  CommonDragItemI,\n  CommonDragCollectedPropsI,\n} from \"./ItemTypes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootStateI } from \"../store\";\nimport {\n  CompositionsActionTypesI,\n  CompositionsActionNames,\n} from \"../store/Compositions\";\nimport { dropColorHandler } from \"../utils/Interact\";\nimport { ItemsActionTypesI, ItemsActionNames } from \"../store/Items\";\n\ntype BoxProps = Pick<CommonDragItemI, \"itemKey\"> &\n  Partial<Pick<CommonDragItemI, \"compositionActionName\">>;\n\nconst defaultStyles = {\n  backgroundColor: \"white\",\n  width: \"100px\",\n  height: \"100px\",\n};\nconst dragType = ItemTypes.Background;\nconst accept = [ItemTypes.Background];\nexport const Background: React.FC<BoxProps> = ({\n  itemKey,\n  compositionActionName = CompositionsActionNames.UPDATE,\n  children,\n}) => {\n  const dispatch = useDispatch<\n    Dispatch<CompositionsActionTypesI | ItemsActionTypesI>\n  >();\n\n  const styles = useSelector(\n    (state: RootStateI) => {\n      const itemProps = state.Items[itemKey];\n      return itemProps?.styles || defaultStyles;\n    },\n    (left, right) => {\n      return false;\n    }\n  );\n\n  const [{ opacity }, drag] = useDrag<\n    CommonDragItemI,\n    any,\n    CommonDragCollectedPropsI\n  >({\n    item: { type: dragType, itemKey, compositionActionName },\n    end: (item, monitor) => {\n      console.log(\"drag \", compositionActionName);\n      //delete\n      if (!monitor.didDrop()) {\n        dispatch({\n          type: CompositionsActionNames.DELETE,\n          targetItemKey: itemKey,\n          sourceItemType: dragType,\n        });\n        console.log(\"bg delete itemKey\", itemKey);\n      }\n    },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  });\n\n  const [{ dropStyles }, drop] = useDrop<CommonDragItemI, any, any>({\n    accept,\n    drop: (item, monitor) => {\n      //drop when not nested\n      if (!monitor.didDrop()) {\n        if (item.compositionActionName === CompositionsActionNames.INSERT) {\n          dispatch({\n            type: CompositionsActionNames.INSERT,\n            targetItemKey: itemKey,\n            sourceItemType: item.type,\n            sourceItemKey: item.itemKey,\n          });\n        } else {\n          //update\n          const delta = monitor.getDifferenceFromInitialOffset() as {\n            x: number;\n            y: number;\n          };\n          let left = Math.round(\n            parseInt((styles.left as string) || \"0\", 10) + delta.x\n          );\n          let top = Math.round(\n            parseInt((styles.top as string) || \"0\", 10) + delta.y\n          );\n          dispatch({\n            type: ItemsActionNames.UPDATE,\n            sourceItemKey: item.itemKey,\n            sourceItemType: item.type,\n            styles: { top, left },\n          });\n          console.log(\"relative\", delta);\n        }\n      }\n    },\n    collect: (monitor) => {\n      return { dropStyles: { ...dropColorHandler(monitor, styles) } };\n    },\n  });\n\n  return (\n    <div\n      ref={(node) => drag(drop(node))}\n      style={{ ...styles, opacity, ...dropStyles }}\n      data-itemKey={itemKey}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst UpdateBoard: React.FC<{ itemKey: string }> = ({ itemKey }) => {\n  const dispatch = useDispatch<Dispatch<ItemsActionTypesI>>();\n  const styles = useSelector((state: RootStateI) => {\n    const itemProps = state.Items[itemKey];\n    return itemProps?.styles || defaultStyles;\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          style={{\n            flex: \"1 0 70px\",\n            textAlignLast: \"right\",\n          }}\n        >\n          宽：\n        </span>\n        <Input\n          value={styles.width || \"100px\"}\n          onChange={(e) => {\n            dispatch({\n              type: ItemsActionNames.UPDATE,\n              sourceItemKey: itemKey,\n              sourceItemType: ItemTypes.Background,\n              styles: { width: e.target.value },\n            });\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          style={{\n            flex: \"1 0 70px\",\n            textAlignLast: \"right\",\n          }}\n        >\n          高：\n        </span>\n        <Input\n          value={styles.height || \"200px\"}\n          onChange={(e) => {\n            dispatch({\n              type: ItemsActionNames.UPDATE,\n              sourceItemKey: itemKey,\n              sourceItemType: ItemTypes.Background,\n              styles: { height: e.target.value },\n            });\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          style={{\n            flex: \"1 0 70px\",\n            textAlignLast: \"right\",\n          }}\n        >\n          背景颜色：\n        </span>\n        <Input\n          value={styles.backgroundColor || \"#FFFFFF\"}\n          onChange={(e) => {\n            dispatch({\n              type: ItemsActionNames.UPDATE,\n              sourceItemKey: itemKey,\n              sourceItemType: ItemTypes.Background,\n              styles: { backgroundColor: e.target.value },\n            });\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          style={{\n            flex: \"1 0 70px\",\n            textAlignLast: \"right\",\n          }}\n        >\n          背景图：\n        </span>\n        <Input\n          value={styles.backgroundImage}\n          onChange={(e) => {\n            dispatch({\n              type: ItemsActionNames.UPDATE,\n              sourceItemKey: itemKey,\n              sourceItemType: ItemTypes.Background,\n              styles: { backgroundImage: e.target.value },\n            });\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          style={{\n            flex: \"1 0 70px\",\n            textAlignLast: \"right\",\n          }}\n        >\n          position：\n        </span>\n        {/* todotodo */}\n        <Select\n          style={{ width: \"100%\" }}\n          defaultValue=\"static\"\n          onChange={(value) => {\n            dispatch({\n              type: ItemsActionNames.UPDATE,\n              sourceItemKey: itemKey,\n              sourceItemType: ItemTypes.Background,\n              styles: { position: value as \"relative\" },\n            });\n          }}\n        >\n          <Select.Option value=\"static\">static</Select.Option>\n          <Select.Option value=\"relative\">relative</Select.Option>\n        </Select>\n      </div>\n    </div>\n  );\n};\n\nconst LeftAttr: React.FC<BoxProps> = ({ itemKey, compositionActionName }) => {\n  return (\n    <>\n      <Background\n        itemKey={itemKey}\n        compositionActionName={compositionActionName}\n      />\n      <UpdateBoard itemKey={itemKey} />\n    </>\n  );\n};\nexport default LeftAttr;\n","import React from \"react\";\nimport Background from \"../components/Background\";\nimport { RootStateI } from \"../store\";\nimport { useSelector } from \"react-redux\";\nimport { CompositionsActionNames } from \"../store/Compositions\";\n\nexport default function () {\n  const newItemKey = useSelector((state: RootStateI) => {\n    return state.ItemKey.newItemKey;\n  });\n  return (\n    <div\n      className=\"left\"\n      style={{\n        // padding: \"0 24px\",\n        margin: \"0 10px\",\n        textAlign: \"center\",\n        width: \"50%\",\n      }}\n    >\n      <Background\n        itemKey={newItemKey}\n        compositionActionName={CompositionsActionNames.INSERT}\n      />\n    </div>\n  );\n}\n","import React, { Dispatch } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport {\n  ItemTypes,\n  defaultItemKeys,\n  CommonDragItemI,\n} from \"../components/ItemTypes\";\nimport { Background } from \"../components/Background\";\nimport {\n  CompositionItemStateI,\n  CompositionsActionTypesI,\n  CompositionsActionNames,\n} from \"../store/Compositions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootStateI } from \"../store\";\nimport { List, is } from \"immutable\";\nimport { dropColorHandler } from \"../utils/Interact\";\n\nconst style: React.CSSProperties = {\n  textAlign: \"center\",\n  margin: \"0 10px\",\n  width: \"50%\",\n  border: \"red solid\",\n};\n\nexport interface BgProps {}\n\nfunction getComponent(type: ItemTypes): React.FC<any> {\n  if (type === ItemTypes.Background) {\n    return Background;\n  } else {\n    return () => <div />;\n  }\n}\n\nfunction renderRecursion(compositions: List<CompositionItemStateI>): any {\n  return compositions.map((composition) => {\n    return /*#__PURE__*/ React.createElement(\n      getComponent(composition.get(\"itemType\")),\n      { itemKey: composition.get(\"itemKey\") },\n      ...(composition.get(\"childrens\").size\n        ? renderRecursion(composition.get(\"childrens\"))\n        : [])\n    );\n  });\n}\n\nfunction RenderCompositions({\n  compositions,\n}: {\n  compositions: List<CompositionItemStateI>;\n}): any {\n  return /*#__PURE__*/ React.createElement(\n    React.Fragment,\n    null,\n    ...renderRecursion(compositions)\n  );\n}\n\nconst accept = [ItemTypes.Background];\nconst RightDisplay: React.FC<BgProps> = () => {\n  const itemKey = defaultItemKeys.Default;\n  const dispatch = useDispatch<Dispatch<CompositionsActionTypesI>>();\n\n  const [{ dropStyles }, drop] = useDrop<CommonDragItemI, any, any>({\n    accept,\n    drop: (item, monitor) => {\n      if (!monitor.didDrop()) {\n        //drop when not nested\n        dispatch({\n          type: CompositionsActionNames.INSERT,\n          targetItemKey: itemKey,\n          sourceItemType: item.type,\n          sourceItemKey: item.itemKey,\n        });\n      }\n    },\n    collect: (monitor) => {\n      return { dropStyles: { ...dropColorHandler(monitor, style) } };\n    },\n  });\n\n  const compositions = useSelector(\n    (state: RootStateI) => {\n      return state.Compositions.get(\"childrens\");\n    },\n    (a, b) => is(a, b)\n  );\n  // console.log(compositions.toJS());\n  return (\n    <div ref={drop} style={{ ...style, ...dropStyles }}>\n      <RenderCompositions compositions={compositions} />\n    </div>\n  );\n};\n\nexport default RightDisplay;\n","import React from \"react\";\n\nimport { Layout } from \"antd\";\n// import { CameraTwoTone } from \"@ant-design/icons\";\n\nimport LeftAttr from \"../layout/LeftAttr\";\nimport RightDisplay from \"../layout/RightDisplay\";\n\nconst { Content } = Layout;\n\nexport default function PageLayout() {\n  return (\n    <Layout>\n      {/* <Sider\n        style={{\n          overflow: \"auto\",\n          height: \"100vh\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"4\"]}>\n          <Menu.Item key=\"1\" icon={<CameraTwoTone />}>\n            Background\n          </Menu.Item>\n        </Menu>\n      </Sider> */}\n      <Layout className=\"site-layout\">\n        <Content\n          style={{ padding: \"24px 0\", height: \"100vh\", display: \"flex\" }}\n        >\n          <LeftAttr />\n          <RightDisplay />\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./index.css\";\nimport PageLayout from \"./layout/Layout\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend} debugMode={true}>\n        <PageLayout />\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}